{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/shared/store/index.ts","webpack:///./src/app/shared/store/player-store.module.ts","webpack:///./src/app/shared/store/player.actions.ts","webpack:///./src/app/shared/store/player.gateway.ts","webpack:///./src/app/shared/store/player.state.ts","webpack:///./src/app/shared/utils/abstract-handset-observer.ts","webpack:///./src/app/shared/utils/abstract-subscriptions-destroyer.ts","webpack:///./src/app/shared/utils/endpoints.enum.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  { path: '**', redirectTo: '/' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"<!--suppress HtmlUnknownAnchorTarget -->\\r\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav #drawer\\r\\n               class=\\\"sidenav\\\"\\r\\n               fixedInViewport=\\\"true\\\"\\r\\n               [attr.role]=\\\"isHandset ? 'dialog' : 'navigation'\\\"\\r\\n               [mode]=\\\"isHandset ? 'over' : 'side'\\\"\\r\\n               [opened]=\\\"!isHandset\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n      <a routerLink=\\\"/\\\"\\r\\n         routerLinkActive=\\\"active\\\"\\r\\n         mat-list-item\\r\\n         (click)=\\\"closeDrawer()\\\">Accueil</a>\\r\\n      <a routerLink=\\\"/characteristics\\\"\\r\\n         routerLinkActive=\\\"active\\\"\\r\\n         mat-list-item\\r\\n         (click)=\\\"closeDrawer()\\\">Characteristics</a>\\r\\n      <a routerLink=\\\"/actions\\\"\\r\\n         routerLinkActive=\\\"active\\\"\\r\\n         mat-list-item\\r\\n         (click)=\\\"closeDrawer()\\\">Actions</a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <button *ngIf=\\\"isHandset\\\"\\r\\n              type=\\\"button\\\"\\r\\n              aria-label=\\\"Toggle sidenav\\\"\\r\\n              mat-icon-button\\r\\n              (click)=\\\"drawer.toggle()\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div class=\\\"page_content\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \".mat-sidenav-container {\\n  height: 100%; }\\n  .mat-sidenav-container .mat-drawer-side {\\n    border-right: 0; }\\n  .mat-sidenav-container .page_content {\\n    padding: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kdW5nZW9uLWRyYWdvbnMtY2xpZW50L3NyYy9hcHAvRDpcXERldi1Qcm9ncmFtc1xcZHVuZ2Vvbi1kcmFnb25zLWNsaWVudC9hcHBcXGR1bmdlb24tZHJhZ29ucy1jbGllbnRcXHNyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZLEVBQUE7RUFEZDtJQUlJLGVBQWUsRUFBQTtFQUpuQjtJQVFJLGFBQWEsRUFBQSIsImZpbGUiOiJhcHAvZHVuZ2Vvbi1kcmFnb25zLWNsaWVudC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtc2lkZW5hdi1jb250YWluZXIge1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgLm1hdC1kcmF3ZXItc2lkZSB7XHJcbiAgICBib3JkZXItcmlnaHQ6IDA7XHJcbiAgfVxyXG5cclxuICAucGFnZV9jb250ZW50IHtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import {BreakpointObserver} from '@angular/cdk/layout'\r\nimport {Component, OnInit, ViewChild} from '@angular/core'\r\nimport {MatSidenav} from '@angular/material'\r\nimport {AbstractHandsetObserver} from './shared/utils'\r\nimport {FetchPlayers} from './shared/store/player.actions'\r\nimport {Store} from '@ngxs/store'\r\n\r\n@Component({\r\n  selector: 'dd-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent extends AbstractHandsetObserver implements OnInit {\r\n\r\n  @ViewChild('drawer') private drawer: MatSidenav\r\n\r\n  constructor(private readonly store: Store,\r\n              breakpointObserver: BreakpointObserver) {\r\n    super(breakpointObserver)\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new FetchPlayers())\r\n  }\r\n\r\n  public closeDrawer(): void {\r\n    if (this.isHandset) {\r\n      this.drawer.toggle()\r\n    }\r\n  }\r\n}\r\n","import {HttpClientModule} from '@angular/common/http'\r\nimport {NgModule} from '@angular/core'\r\nimport {MatButtonModule, MatIconModule, MatListModule, MatSidenavModule, MatToolbarModule} from '@angular/material'\r\nimport {BrowserModule} from '@angular/platform-browser'\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\r\nimport {NgxsModule} from '@ngxs/store'\r\nimport {AppRoutingModule} from './app-routing.module'\r\nimport {AppComponent} from './app.component'\r\nimport {PlayerState} from './shared/store'\r\nimport {HomeModule} from './home/home.module'\r\nimport {PlayerStoreModule} from './shared/store/player-store.module'\r\n\r\nconst appModules = [HomeModule]\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    NgxsModule.forRoot([PlayerState]),\r\n    AppRoutingModule,\r\n    PlayerStoreModule,\r\n    ...appModules\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"createPlayerForm\\\"\\r\\n      (ngSubmit)=\\\"createPlayer()\\\"\\r\\n      fxLayout=\\\"row\\\">\\r\\n  <mat-form-field fxFlex=\\\"80\\\">\\r\\n    <input matInput\\r\\n           placeholder=\\\"Name\\\"\\r\\n           formControlName=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div fxFlex>\\r\\n    <button mat-button\\r\\n            type=\\\"submit\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            [disabled]=\\\"createPlayerForm.invalid\\\"\\r\\n            fxFlex>Submit\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<mat-list>\\r\\n  <mat-list-item *ngFor=\\\"let player of players$ | async\\\">{{ player.name }}</mat-list-item>\\r\\n</mat-list>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZHVuZ2Vvbi1kcmFnb25zLWNsaWVudC9zcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core'\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms'\r\nimport {Player} from '@dungeon-dragons-model/player'\r\nimport {Select, Store} from '@ngxs/store'\r\nimport {PlayerState} from '../shared/store'\r\nimport {CreatePlayer, FetchPlayers} from '../shared/store/player.actions'\r\nimport {Observable} from 'rxjs'\r\n\r\n@Component({\r\n  selector: 'dd-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent {\r\n\r\n  @Select(PlayerState.players) players$: Observable<Player[]>\r\n\r\n  readonly createPlayerForm: FormGroup\r\n\r\n  constructor(private readonly store: Store,\r\n              formBuilder: FormBuilder) {\r\n    this.createPlayerForm = formBuilder.group({\r\n      name: ['', [Validators.required]]\r\n    })\r\n  }\r\n\r\n  createPlayer() {\r\n    this.store.dispatch(new CreatePlayer(this.createPlayerForm.getRawValue()))\r\n  }\r\n\r\n  fetchPlayers() {\r\n    this.store.dispatch(new FetchPlayers())\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core'\r\nimport {HomeComponent} from './home.component'\r\nimport {BrowserModule} from '@angular/platform-browser'\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\r\nimport {ReactiveFormsModule} from '@angular/forms'\r\nimport {MatButtonModule, MatIconModule, MatInputModule, MatListModule} from '@angular/material'\r\nimport {NgxsModule} from '@ngxs/store'\r\nimport {PlayerState} from '../shared/store'\r\nimport {FlexLayoutModule} from '@angular/flex-layout'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    NgxsModule.forFeature([PlayerState])\r\n  ]\r\n})\r\nexport class HomeModule {\r\n}\r\n","export { PlayerState }from './player.state'\r\n","import {NgModule} from '@angular/core'\r\nimport {PlayerGateway} from './player.gateway'\r\n\r\n@NgModule({\r\n  providers: [PlayerGateway]\r\n})\r\nexport class PlayerStoreModule {\r\n}\r\n","import { Player } from '@dungeon-dragons-model/player'\r\n\r\nexport class FetchPlayers {\r\n  static readonly type = '[Player] Fetch players'\r\n}\r\n\r\nexport class CreatePlayer {\r\n  static readonly type = '[Player] Create player'\r\n\r\n  constructor(public player: Player) {\r\n  }\r\n}\r\n","import {HttpClient} from '@angular/common/http'\r\nimport {Injectable} from '@angular/core'\r\nimport {Player} from '@dungeon-dragons-model/player'\r\nimport {Observable} from 'rxjs'\r\nimport {Endpoints} from '../utils/endpoints.enum'\r\n\r\n@Injectable()\r\nexport class PlayerGateway {\r\n  constructor(private readonly httpClient: HttpClient) {\r\n  }\r\n\r\n  fetchPlayers(): Observable<Player[]> {\r\n    return this.httpClient.get<Player[]>(Endpoints.player)\r\n  }\r\n\r\n  createPlayer(player: Player): Observable<Player> {\r\n    return this.httpClient.post<Player>(Endpoints.player, player)\r\n  }\r\n}\r\n","import { Player } from '@dungeon-dragons-model/player'\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store'\r\nimport { Observable } from 'rxjs'\r\nimport { tap } from 'rxjs/operators'\r\nimport { CreatePlayer, FetchPlayers } from './player.actions'\r\nimport { PlayerGateway } from './player.gateway'\r\nimport { PlayerStateModel } from './player.state.model'\r\n\r\n@State<PlayerStateModel>({\r\n  name: 'digitalNetwork',\r\n  defaults: {\r\n    players: [],\r\n    player: null\r\n  }\r\n})\r\nexport class PlayerState {\r\n  constructor(private readonly playerGateway: PlayerGateway) {\r\n  }\r\n\r\n  @Selector()\r\n  static player(state: PlayerStateModel): Player {\r\n    return state.player\r\n  }\r\n\r\n  @Selector()\r\n  static players(state: PlayerStateModel): Player[] {\r\n    return state.players\r\n  }\r\n\r\n  @Action(FetchPlayers)\r\n  fetchPlayers(ctx: StateContext<PlayerStateModel>): Observable<{}> {\r\n    return this.playerGateway.fetchPlayers()\r\n      .pipe(\r\n        tap((players: Player[]) => ctx.patchState({ players }))\r\n      )\r\n  }\r\n\r\n\r\n  @Action(CreatePlayer)\r\n  createPlayer(ctx: StateContext<PlayerStateModel>, action: CreatePlayer): Observable<{}> {\r\n    return this.playerGateway.createPlayer(action.player)\r\n      .pipe(\r\n        tap(() => ctx.dispatch(new FetchPlayers()))\r\n      )\r\n  }\r\n}\r\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\r\nimport { Observable } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\nimport { AbstractSubscriptionsDestroyer } from './abstract-subscriptions-destroyer'\r\n\r\nexport abstract class AbstractHandsetObserver extends AbstractSubscriptionsDestroyer {\r\n  public isHandset: boolean\r\n\r\n  protected isHandset$: Observable<boolean> = this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    )\r\n\r\n  protected constructor(protected readonly breakpointObserver: BreakpointObserver) {\r\n    super()\r\n\r\n    this.willUnsubscribe(\r\n      this.isHandset$.subscribe((handset: boolean) => this.isHandset = handset)\r\n    )\r\n  }\r\n}\r\n","import { OnDestroy } from '@angular/core'\r\nimport { Subscription } from 'rxjs'\r\n\r\nexport abstract class AbstractSubscriptionsDestroyer implements OnDestroy {\r\n  private subscriptions: Subscription[] = []\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(unsubscribe)\r\n  }\r\n\r\n  protected willUnsubscribe(...subscriptions: Subscription[]) {\r\n    this.subscriptions.push(...subscriptions)\r\n  }\r\n}\r\n\r\nfunction unsubscribe(subscription: Subscription): void {\r\n  subscription.unsubscribe()\r\n}\r\n","export enum Endpoints {\r\n  player = '/api/player'\r\n}\r\n","export { AbstractSubscriptionsDestroyer } from './abstract-subscriptions-destroyer'\r\nexport { AbstractHandsetObserver } from './abstract-handset-observer'\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}