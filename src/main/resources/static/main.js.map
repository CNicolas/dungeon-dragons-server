{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/shared/store/index.ts","webpack:///./src/app/shared/store/player.actions.ts","webpack:///./src/app/shared/store/player.gateway.ts","webpack:///./src/app/shared/store/player.state.ts","webpack:///./src/app/shared/utils/abstract-handset-observer.ts","webpack:///./src/app/shared/utils/abstract-subscriptions-destroyer.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  { path: '**', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<!--suppress HtmlUnknownAnchorTarget -->\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer\\n               class=\\\"sidenav\\\"\\n               fixedInViewport=\\\"true\\\"\\n               [attr.role]=\\\"isHandset ? 'dialog' : 'navigation'\\\"\\n               [mode]=\\\"isHandset ? 'over' : 'side'\\\"\\n               [opened]=\\\"!isHandset\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a routerLink=\\\"/\\\"\\n         routerLinkActive=\\\"active\\\"\\n         mat-list-item\\n         (click)=\\\"closeDrawer()\\\">Accueil</a>\\n      <a routerLink=\\\"/characteristics\\\"\\n         routerLinkActive=\\\"active\\\"\\n         mat-list-item\\n         (click)=\\\"closeDrawer()\\\">Characteristics</a>\\n      <a routerLink=\\\"/actions\\\"\\n         routerLinkActive=\\\"active\\\"\\n         mat-list-item\\n         (click)=\\\"closeDrawer()\\\">Actions</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button *ngIf=\\\"isHandset\\\"\\n              type=\\\"button\\\"\\n              aria-label=\\\"Toggle sidenav\\\"\\n              mat-icon-button\\n              (click)=\\\"drawer.toggle()\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n\\n    <router-outlet></router-outlet>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZHVuZ2Vvbi1kcmFnb25zLWNsaWVudC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { BreakpointObserver } from '@angular/cdk/layout'\nimport { Component, ViewChild } from '@angular/core'\nimport { MatSidenav } from '@angular/material'\nimport { AbstractHandsetObserver } from './shared/utils'\n\n@Component({\n  selector: 'dd-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent extends AbstractHandsetObserver {\n\n  @ViewChild('drawer') private drawer: MatSidenav\n\n  constructor(breakpointObserver: BreakpointObserver) {\n    super(breakpointObserver)\n  }\n\n  public closeDrawer(): void {\n    if (this.isHandset) {\n      this.drawer.toggle()\n    }\n  }\n}\n","import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { MatButtonModule, MatIconModule, MatInputModule, MatListModule, MatSidenavModule, MatToolbarModule } from '@angular/material'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NgxsModule } from '@ngxs/store'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { HomeComponent } from './home/home.component'\nimport { PlayerState } from './shared/store'\nimport { PlayerGateway } from './shared/store/player.gateway'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    NgxsModule.forRoot([PlayerState]),\n    AppRoutingModule\n  ],\n  providers: [PlayerGateway],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","module.exports = \"<button mat-button\\n        (click)=\\\"fetchPlayers()\\\">Fetch players\\n</button>\\n\\n<form [formGroup]=\\\"createPlayerForm\\\"\\n      (ngSubmit)=\\\"createPlayer()\\\">\\n  <input matInput\\n         placeholder=\\\"Name\\\"\\n         formControlName=\\\"name\\\">\\n\\n  <button mat-button\\n          type=\\\"submit\\\">Submit\\n  </button>\\n</form>\\n\\n\\n{{ players | json }}\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZHVuZ2Vvbi1kcmFnb25zLWNsaWVudC9zcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { Player } from '@dungeon-dragons-model/player'\nimport { Store } from '@ngxs/store'\nimport { PlayerState } from '../shared/store'\nimport { CreatePlayer, FetchPlayers } from '../shared/store/player.actions'\n\n@Component({\n  selector: 'dd-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  players: Player[]\n\n  readonly createPlayerForm: FormGroup\n\n  constructor(private readonly store: Store,\n              formBuilder: FormBuilder) {\n    this.createPlayerForm = formBuilder.group({\n      name: ['', [Validators.required]]\n    })\n  }\n\n  ngOnInit() {\n    this.store.select(PlayerState.players)\n      .subscribe(players => this.players = players)\n  }\n\n  createPlayer() {\n    this.store.dispatch(new CreatePlayer(this.createPlayerForm.getRawValue()))\n  }\n\n  fetchPlayers() {\n    this.store.dispatch(new FetchPlayers())\n  }\n\n}\n","export { PlayerState }from './player.state'\r\n","import { Player } from '@dungeon-dragons-model/player'\r\n\r\nexport class FetchPlayers {\r\n  static readonly type = '[Player] Fetch players'\r\n}\r\n\r\nexport class CreatePlayer {\r\n  static readonly type = '[Player] Create player'\r\n\r\n  constructor(public player: Player) {\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Player } from '@dungeon-dragons-model/player'\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable()\r\nexport class PlayerGateway {\r\n  constructor(private readonly httpClient: HttpClient) {\r\n  }\r\n\r\n  fetchPlayers(): Observable<Player[]> {\r\n    return this.httpClient.get<Player[]>('/player')\r\n  }\r\n\r\n  createPlayer(player: Player): Observable<Player> {\r\n    return this.httpClient.post<Player>('/player', player)\r\n  }\r\n}\r\n","import { Player } from '@dungeon-dragons-model/player'\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store'\r\nimport { Observable } from 'rxjs'\r\nimport { tap } from 'rxjs/operators'\r\nimport { CreatePlayer, FetchPlayers } from './player.actions'\r\nimport { PlayerGateway } from './player.gateway'\r\nimport { PlayerStateModel } from './player.state.model'\r\n\r\n@State<PlayerStateModel>({\r\n  name: 'digitalNetwork',\r\n  defaults: {\r\n    players: [],\r\n    player: null\r\n  }\r\n})\r\nexport class PlayerState {\r\n  constructor(private readonly playerGateway: PlayerGateway) {\r\n  }\r\n\r\n  @Selector()\r\n  static player(state: PlayerStateModel): Player {\r\n    return state.player\r\n  }\r\n\r\n  @Selector()\r\n  static players(state: PlayerStateModel): Player[] {\r\n    return state.players\r\n  }\r\n\r\n  @Action(FetchPlayers)\r\n  fetchPlayers(ctx: StateContext<PlayerStateModel>): Observable<{}> {\r\n    return this.playerGateway.fetchPlayers()\r\n      .pipe(\r\n        tap((players: Player[]) => ctx.patchState({ players }))\r\n      )\r\n  }\r\n\r\n\r\n  @Action(CreatePlayer)\r\n  createPlayer(ctx: StateContext<PlayerStateModel>, action: CreatePlayer): Observable<{}> {\r\n    return this.playerGateway.createPlayer(action.player)\r\n      .pipe(\r\n        tap(() => ctx.dispatch(new FetchPlayers()))\r\n      )\r\n  }\r\n}\r\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { AbstractSubscriptionsDestroyer } from './abstract-subscriptions-destroyer'\n\nexport abstract class AbstractHandsetObserver extends AbstractSubscriptionsDestroyer {\n  public isHandset: boolean\n\n  protected isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    )\n\n  protected constructor(protected readonly breakpointObserver: BreakpointObserver) {\n    super()\n\n    this.willUnsubscribe(\n      this.isHandset$.subscribe((handset: boolean) => this.isHandset = handset)\n    )\n  }\n}\n","import { OnDestroy } from '@angular/core'\nimport { Subscription } from 'rxjs'\n\nexport abstract class AbstractSubscriptionsDestroyer implements OnDestroy {\n  private subscriptions: Subscription[] = []\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(unsubscribe)\n  }\n\n  protected willUnsubscribe(...subscriptions: Subscription[]) {\n    this.subscriptions.push(...subscriptions)\n  }\n}\n\nfunction unsubscribe(subscription: Subscription): void {\n  subscription.unsubscribe()\n}\n","export { AbstractSubscriptionsDestroyer } from './abstract-subscriptions-destroyer'\r\nexport { AbstractHandsetObserver } from './abstract-handset-observer'\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}